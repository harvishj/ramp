:root {
  --color-empty-shade: #fff;
  --color-light-shade: #eaeaea;
  --color-lighter-shade: #edebe6;
  --color-dark-shade: #6f6f66;
  --color-darker-shade: #ecf3d3;
  --color-text: #2d2d26;
  --color-accent: #f4ff56;
  --color-constructive: #109d46;
  --color-destructive: #d94b03;
}

html,
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

[class^='RampText--'] {
  line-height: 1.5;
  font-size: 1rem;
  margin: 0;
}

.RampText--s {
  font-size: 0.75rem;
}

.RampText--hushed {
  color: var(--color-dark-shade);
}

[class^='RampTextHeading--'] {
  margin: 0;
  line-height: 1;
}

.RampTextHeading--l {
  font-size: 2.5rem;
}

.RampGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0.75rem;
  width: 100%;
}

.RampBreak--xs {
  height: 0.5rem;
}

.RampBreak--s {
  height: 0.75rem;
}

.RampBreak--l {
  height: 1.75rem;
}

hr.RampBreak--l {
  height: 1px;
  width: 100%;
  margin: 1.75rem 0;
  border: none;
  background-color: var(--color-light-shade);
}

.RampInputSelect--root {
  width: 100%;
  position: relative;
}

.RampInputSelect--input {
  padding: 1rem 0.75rem;
  border: 1px solid var(--color-light-shade);
  border-bottom: 1px solid var(--color-text);
  cursor: pointer;
}

.RampInputSelect--dropdown-container {
  display: none;
  /* 
    Changing the position from fixed to static will work but the dropdown will push the transaction pane towards the bottom, however, if we use the position as absolute and make the parent element of the dropdown relative then the dropdown will always stick to the parent div, In order to make this work, I had to change the dynamic top value of the dropdown.
  */
  position: absolute;
  z-index: 2;
  width: 100%;
  max-width: 700px;
  border: 1px solid var(--color-darker-shade);
  margin-top: 0.5rem;
  max-height: 16rem;
  overflow: auto;
  box-shadow: rgb(0 0 0 / 10%) 0px 0px 1px, rgb(0 0 0 / 13%) 0px 4px 8px;
}

.RampInputSelect--dropdown-container-opened {
  display: block;
}

.RampInputSelect--dropdown-item {
  padding: 1rem 0.75rem;
  background-color: var(--color-empty-shade);
  border-bottom: 1px solid var(--color-light-shade);
  cursor: pointer;
}

.RampInputSelect--dropdown-item-highlighted {
  background-color: var(--color-lighter-shade);
}

.RampInputSelect--dropdown-item-selected {
  font-weight: bold;
}

.RampInputCheckbox--container {
  display: flex;
  position: relative;
  justify-content: center;
  align-items: center;
}

.RampInputCheckbox--label {
  border: 1px solid var(--color-light-shade);
  background-color: var(--color-lighter-shade);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.125rem;
  width: 1.25rem;
  height: 1.25rem;
  cursor: pointer;
}

.RampInputCheckbox--label-disabled {
  cursor: progress;
}

.RampInputCheckbox--label-checked:before {
  content: ' ';
  width: 100%;
  height: 100%;
  border-color: var(--color-constructive);
  background-color: var(--color-constructive);
}

.RampInputCheckbox--input {
  /* display: none;
    Because the Input checkbox is hidden, We won't be able to click on the actual checkbox element, As we know, the native HTML checkbox can't be customized, to do the customization, an actual checkbox is used and a sibling HTML element is styled based on the requirements. Here I'm using opacity as zero and a position property in order to superimpose the input element on the label element. once we do that we will be able to click on the input box but it won't be visible to the user, and it will behave as if there is a custom checkbox.

   */
  position: absolute;
  opacity: 0;
  z-index: 1;
  cursor: pointer;
  width: 1.25rem;
  height: 1.25rem;
}

.RampButton {
  border: 1px solid var(--color-light-shade);
  background-color: var(--color-light-shade);
  padding: 0.5rem;
  cursor: pointer;
}

.RampButton:hover {
  background-color: var(--color-lighter-shade);
}

.RampButton:disabled {
  cursor: not-allowed;
}

.RampPane {
  padding: 1rem;
  border: 1px solid var(--color-light-shade);
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}

.RampPane--content {
  flex: 1;
}

.RampLoading--container {
  display: flex;
  justify-content: center;
}

.RampError {
  margin: 4rem auto;
  max-width: 40rem;
  border: 1px solid var(--color-destructive);
  color: var(--color-destructive);
  padding: 2rem;
}

.MainContainer {
  max-width: 700px;
  margin: 0 auto;
  min-height: 100vh;
  padding: 4rem 0;
}

.FilterContainer {
  display: flex;
  justify-content: flex-end;
  gap: 0.75rem;
}
